"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
// tslint:disable:no-expression-statement
const ava_1 = __importDefault(require("ava"));
const _1 = require(".");
ava_1.default('validate(,{minLength: invalid})', t => {
    t.throws(() => _1.validate("", { minLength: 5 }), { message: /minLength must be bigger than 8/ });
});
ava_1.default('validate(,{maxLength: invalid})', t => {
    t.throws(() => _1.validate("", { maxLength: 30 }), { message: /maxLength must be bigger than 50/ });
});
ava_1.default('validate(minLength)', t => {
    t.deepEqual(_1.validate("a"), { valid: false, errors: [_1.RULES.MIN_LENGTH] });
});
ava_1.default('validate(maxLength)', t => {
    t.deepEqual(_1.validate(new Array(1000).fill("a").join()), { valid: false, errors: [_1.RULES.MAX_LENGTH] });
});
ava_1.default('validate(blacklist)', t => {
    t.deepEqual(_1.validate("qwertyuiop"), { valid: false, errors: [_1.RULES.BLACKLIST] });
});
ava_1.default('validate(pass, {letters: true})', t => {
    t.deepEqual(_1.validate("123432112412124421124"), { valid: false, errors: [_1.RULES.LETTERS] });
});
ava_1.default('validate(pass, {digits: true})', t => {
    t.deepEqual(_1.validate("aaaaaaaaaaaa", { digits: true }), { valid: false, errors: [_1.RULES.DIGITS] });
});
ava_1.default('validate(pass, {uppercase: true})', t => {
    t.deepEqual(_1.validate("aaaaaaaaaaaa", { uppercase: true }), { valid: false, errors: [_1.RULES.UPPERCASE] });
});
ava_1.default('validate(pass, {lowercase: true})', t => {
    t.deepEqual(_1.validate("AAAAAAAAAAAAAA", { lowercase: true }), { valid: false, errors: [_1.RULES.LOWERCASE] });
});
ava_1.default('validate(pass, {symbols: true})', t => {
    t.deepEqual(_1.validate("AAAAAAAAAAAAAA", { symbols: true }), { valid: false, errors: [_1.RULES.SYMBOLS] });
});
ava_1.default('validate(invalid, {all in true})', t => {
    t.deepEqual(_1.validate("AAA", {
        symbols: true,
        digits: true,
        letters: true,
        uppercase: true,
        lowercase: true,
    }), { valid: false, errors: [_1.RULES.MIN_LENGTH, _1.RULES.DIGITS, _1.RULES.LOWERCASE, _1.RULES.SYMBOLS] });
});
ava_1.default('validate(valid, {all in true})', t => {
    t.deepEqual(_1.validate("AAAaaaa###123@@", {
        symbols: true,
        digits: true,
        letters: true,
        uppercase: true,
        lowercase: true,
    }), { valid: true, errors: [] });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguc3BlYy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9pbmRleC5zcGVjLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEseUNBQXlDO0FBQ3pDLDhDQUF1QjtBQUN2Qix3QkFBb0M7QUFFcEMsYUFBSSxDQUFDLGlDQUFpQyxFQUFFLENBQUMsQ0FBQyxFQUFFO0lBQzFDLENBQUMsQ0FBQyxNQUFNLENBQUMsR0FBRyxFQUFFLENBQUMsV0FBUSxDQUFDLEVBQUUsRUFBRSxFQUFFLFNBQVMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUMsT0FBTyxFQUFFLGlDQUFpQyxFQUFDLENBQUMsQ0FBQTtBQUM5RixDQUFDLENBQUMsQ0FBQztBQUVILGFBQUksQ0FBQyxpQ0FBaUMsRUFBRSxDQUFDLENBQUMsRUFBRTtJQUMxQyxDQUFDLENBQUMsTUFBTSxDQUFDLEdBQUcsRUFBRSxDQUFDLFdBQVEsQ0FBQyxFQUFFLEVBQUUsRUFBRSxTQUFTLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFDLE9BQU8sRUFBRSxrQ0FBa0MsRUFBQyxDQUFDLENBQUE7QUFDaEcsQ0FBQyxDQUFDLENBQUM7QUFFSCxhQUFJLENBQUMscUJBQXFCLEVBQUUsQ0FBQyxDQUFDLEVBQUU7SUFDOUIsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxXQUFRLENBQUMsR0FBRyxDQUFDLEVBQUUsRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxDQUFDLFFBQUssQ0FBQyxVQUFVLENBQUMsRUFBRSxDQUFDLENBQUE7QUFDMUUsQ0FBQyxDQUFDLENBQUE7QUFFRixhQUFJLENBQUMscUJBQXFCLEVBQUUsQ0FBQyxDQUFDLEVBQUU7SUFDOUIsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxXQUFRLENBQUMsSUFBSSxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUksRUFBRSxDQUFDLEVBQUUsRUFBRSxLQUFL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